plugins {
    id 'org.jetbrains.intellij' version '0.4.21'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'idea'
}

allprojects {
    group 'com.github.jk1'
    version '1.1.0'

    repositories {
        mavenCentral()
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

def supportedVersions = ['IC-2020.1', 'IC-2020.2', 'IC-2020.3', 'LATEST-EAP-SNAPSHOT'/*,'LATEST-TRUNK-SNAPSHOT'*/]

intellij {
    version project.hasProperty('ideaVersion') ? project.ideaVersion : 'IC-2020.3'
    plugins 'tasks'  //Bundled plugin dependencies
    updateSinceUntilBuild false
    instrumentCode false
    pluginName 'ytplugin'
    println "This build uses IDEA Community $version"
}

idea {
    module {
        downloadSources = true
        outputDir file("$buildDir/idea/main")
        testOutputDir file("$buildDir/idea/test")
    }
}

publishPlugin {
    token project.findProperty("marketplaceToken") ?: ""
    channels 'stable'
}

dependencies {
    compile project(':api')
    compile 'org.nanohttpd:nanohttpd:2.3.0'

    testCompile 'junit:junit:4.12'
}

test {
    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'
    }
    outputs.upToDateWhen { false }
}

// runs `./gradlew test` several times against all supported IDE versions
task testAllSupportedIdes {
    def taskNames = supportedVersions.collect { "runTestsWithIdea$it" }
    dependsOn taskNames.first()
    supportedVersions.eachWithIndex { version, index ->
        task "runTestsWithIdea$version"(type: GradleBuild) {
            if (index != supportedVersions.size() - 1) {
                dependsOn taskNames.get(index + 1)
            }
            buildName = "runTestsWithIdea$version"
            buildFile = 'build.gradle'
            tasks = ['test']
            startParameter.projectProperties = [ideaVersion: version]
        }
    }
}

// Travis CI
check.dependsOn testAllSupportedIdes

